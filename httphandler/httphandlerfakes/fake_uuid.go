// Code generated by counterfeiter. DO NOT EDIT.
package httphandlerfakes

import (
	"sync"

	"github.com/blabbertabber/speechbroker/httphandler"
)

type FakeUuid struct {
	GetUuidStub        func() string
	getUuidMutex       sync.RWMutex
	getUuidArgsForCall []struct{}
	getUuidReturns     struct {
		result1 string
	}
	getUuidReturnsOnCall map[int]struct {
		result1 string
	}
	invocations      map[string][][]interface{}
	invocationsMutex sync.RWMutex
}

func (fake *FakeUuid) GetUuid() string {
	fake.getUuidMutex.Lock()
	ret, specificReturn := fake.getUuidReturnsOnCall[len(fake.getUuidArgsForCall)]
	fake.getUuidArgsForCall = append(fake.getUuidArgsForCall, struct{}{})
	fake.recordInvocation("GetUuid", []interface{}{})
	fake.getUuidMutex.Unlock()
	if fake.GetUuidStub != nil {
		return fake.GetUuidStub()
	}
	if specificReturn {
		return ret.result1
	}
	return fake.getUuidReturns.result1
}

func (fake *FakeUuid) GetUuidCallCount() int {
	fake.getUuidMutex.RLock()
	defer fake.getUuidMutex.RUnlock()
	return len(fake.getUuidArgsForCall)
}

func (fake *FakeUuid) GetUuidReturns(result1 string) {
	fake.GetUuidStub = nil
	fake.getUuidReturns = struct {
		result1 string
	}{result1}
}

func (fake *FakeUuid) GetUuidReturnsOnCall(i int, result1 string) {
	fake.GetUuidStub = nil
	if fake.getUuidReturnsOnCall == nil {
		fake.getUuidReturnsOnCall = make(map[int]struct {
			result1 string
		})
	}
	fake.getUuidReturnsOnCall[i] = struct {
		result1 string
	}{result1}
}

func (fake *FakeUuid) Invocations() map[string][][]interface{} {
	fake.invocationsMutex.RLock()
	defer fake.invocationsMutex.RUnlock()
	fake.getUuidMutex.RLock()
	defer fake.getUuidMutex.RUnlock()
	copiedInvocations := map[string][][]interface{}{}
	for key, value := range fake.invocations {
		copiedInvocations[key] = value
	}
	return copiedInvocations
}

func (fake *FakeUuid) recordInvocation(key string, args []interface{}) {
	fake.invocationsMutex.Lock()
	defer fake.invocationsMutex.Unlock()
	if fake.invocations == nil {
		fake.invocations = map[string][][]interface{}{}
	}
	if fake.invocations[key] == nil {
		fake.invocations[key] = [][]interface{}{}
	}
	fake.invocations[key] = append(fake.invocations[key], args)
}

var _ httphandler.Uuid = new(FakeUuid)
